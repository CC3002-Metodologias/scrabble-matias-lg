package cl.uchile.dcc.scrabble.gui.nativeClasses;

import cl.uchile.dcc.scrabble.gui.natives.ScrabbleNumber;

import java.util.Objects;

/**
 * float class of Scrabble, stores a Java double
 */
public class ScrabbleFloat extends ScrabbleNumber {
    private double value;

    /**
     * Native float type for Scrabble
     *
     * @param value double to store in the object
     */
    public ScrabbleFloat(double value) {
        this.value = value;
    }

    /**
     * @return stored double
     */
    public double getValue() {
        return value;
    }

    /**
     * Gets the stored double as a String
     *
     * @return saved double as a String
     */
    @Override
    public String toString() {
        return Double.toString(value);
    }

    /**
     * Compare two ScrabbleFloat by their stored values
     *
     * @param o Object to compare, must be a ScrabbleFloat for it to return true
     * @return true if both ScrabbleFloat store the same double
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof ScrabbleFloat)) return false;
        ScrabbleFloat that = (ScrabbleFloat) o;
        return Double.compare(that.getValue(), getValue()) == 0;
    }

    /**
     * representative Hash of a ScrabbleFloat generated by its stored double
     *
     * @return hash of the stored double
     */
    @Override
    public int hashCode() {
        return Objects.hash(getValue());
    }

    /**
     * Converts a ScrabbleFloat to ScrabbleString
     *
     * @return ScrabbleString that stores the current double as a String
     */
    @Override
    public ScrabbleString asScrabbleString() {
        return new ScrabbleString(toString());
    }

    /**
     * Creates a copy of a ScrabbleFloat
     *
     * @return new ScrabbleFloat containing the same double
     */
    public ScrabbleFloat asScrabbleFloat() {
        return new ScrabbleFloat(this.getValue());
    }
}
